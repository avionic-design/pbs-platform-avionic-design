#!/bin/sh -e

interface="$1"
action="$2"
arptype="$3"

stop_wpa_supplicant ()
{
	/usr/bin/logger -t iflinkd "closing supplicant for $1"
	/usr/bin/kill `cat /run/wpa_supplicant-$1.pid`
	/usr/bin/rm -f /run/wpa_supplicant-$1.pid
}

start_wpa_supplicant()
{
	if test -e /run/wpa_supplicant-$1.pid; then
		/usr/bin/logger -t iflinkd "supplicant already running for $1"
		exit 0
	fi

	if test -e /var/run/wpa_supplicant/$1; then
		/usr/bin/logger -t iflinkd "$1: found old control file"
		rm -f /var/run/wpa_supplicant/$1
	fi

	# Start the supplicant, touch the pid file first, otherwise it can
	# happend, that we try to restart wpa_supplicant twice, due
	# multi-threading.
	touch /run/wpa_supplicant-$1.pid
	/usr/sbin/wpa_supplicant -B -Dnl80211 -i$1 \
		-c/etc/wpa_supplicant/wpa_supplicant-nl80211-$1.conf \
		-P/run/wpa_supplicant-$1.pid \
		-f/var/log/wpa_supplicant-$1.log &
}

# check if we have a wireless device
if ! test -d "/sys/class/net/$interface/wireless"; then
        /usr/bin/logger -t iflinkd "$interface is not a wireless device"
        exit 0
fi

# check if it is of type ethernet
if test "x$arptype" != "xether"; then
	/usr/bin/logger -t iflinkd "unsupported ARP type: $arptype"
	exit 0
fi

#check the action we should take
case $action in
	link)
		/usr/bin/logger -t iflinkd "$interface got link"
		start_wpa_supplicant $interface
		;;
	up)
		/usr/bin/logger -t iflinkd "$interface is now up"
		start_wpa_supplicant $interface
		;;
	down)
		/usr/bin/logger -t iflinkd "$interface is now down"
		stop_wpa_supplicant $interface
		;;
	*)
		/usr/bin/logger -t iflinkd "unsupported action $action on $interface"
		;;
esac

